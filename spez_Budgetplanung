Sub ExtractProjectBudgetData()
    Dim wsSource As Worksheet
    Dim wsTarget As Worksheet
    Dim wsName As String
    Dim counter As Integer
    Dim projectNumber As String
    Dim lastRow As Long
    Dim startRow As Long
    Dim endRow As Long
    Dim i As Long
    Dim headerRow As Long
    Dim headerCol As Long
    
    ' Setze die Quelle Arbeitsblatt
    Set wsSource = ThisWorkbook.Sheets("Jedox - Personnel - overview")
    
    ' Frage die Projektnummer ab
    projectNumber = InputBox("Bitte gebe die gewünschte Projektnummer ein:")
    If projectNumber = "" Then Exit Sub
    
    ' Finde den Namen für das neue Arbeitsblatt
    wsName = "spez Projektbudgetplan"
    counter = 1
    Do While SheetExists(wsName)
        wsName = "spezifische Projektbudgetplanung" & counter
        counter = counter + 1
    Loop
    
    ' Erstellt das neue Arbeitsblatt
    Set wsTarget = ThisWorkbook.Sheets.Add
    wsTarget.Name = wsName
    
    ' Setze die Überschriften
    wsTarget.Cells(1, 1).Value = "Projekt Nr"
    wsTarget.Cells(1, 2).Value = "Rolle"
    
    ' Suche nach der Zeile und Spalte mit der Überschrift 2021
    headerRow = 0
    headerCol = 0
    For i = 1 To wsSource.Rows.Count
        For j = 4 To wsSource.Columns.Count ' Suche ab Spalte D
            If wsSource.Cells(i, j).Value = 2021 Then
                headerRow = i
                headerCol = j
                Exit For
            End If
        Next j
        If headerRow > 0 Then Exit For
    Next i
    
    If headerRow = 0 Then
        MsgBox "Überschrift 2021 nicht gefunden.", vbExclamation
        Exit Sub
    End If
    
    ' Setze die Überschriften ab Spalte D
    For i = headerCol To wsSource.Cells(headerRow, wsSource.Columns.Count).End(xlToLeft).Column
        wsTarget.Cells(1, i - headerCol + 4).Value = wsSource.Cells(headerRow, i).Value
    Next i
    
    ' Suche die Start- und Endzeile basierend auf der Projektnummer
    lastRow = wsSource.Cells(wsSource.Rows.Count, 4).End(xlUp).Row
    For i = 1 To lastRow
        If wsSource.Cells(i, 4).Value = projectNumber Then
            startRow = i
            Exit For
        End If
    Next i
    
    If startRow = 0 Then
        MsgBox "Projektnummer nicht gefunden.", vbExclamation
        Exit Sub
    End If
    
    For i = startRow To lastRow
        If wsSource.Cells(i, 4).Value <> projectNumber And wsSource.Cells(i, 4).Value <> "" Then
            endRow = i - 1
            Exit For
        End If
    Next i
    
    If endRow = 0 Then endRow = lastRow
    
    ' Füge zusätzliche Zeilen hinzu, wenn die Zellen leer sind
    Do While endRow < lastRow And (IsEmpty(wsSource.Cells(endRow + 1, headerCol)) Or wsSource.Cells(endRow + 1, headerCol).Value = projectNumber)
        endRow = endRow + 1
    Loop
    
    ' Kopiere die Daten ins neue Arbeitsblatt
    wsSource.Range(wsSource.Cells(startRow, 4), wsSource.Cells(endRow, wsSource.Cells(startRow, wsSource.Columns.Count).End(xlToLeft).Column)).Copy
    wsTarget.Cells(2, 1).PasteSpecial xlPasteValues
    
    ' Lösche Spalte C im neuen Arbeitsblatt
    wsTarget.Columns("C").Delete
    
    ' Formatierung als Tabelle
    Dim tbl As ListObject
    Set tbl = wsTarget.ListObjects.Add(xlSrcRange, wsTarget.Range("A1").CurrentRegion, , xlYes)
    tbl.Name = "ProjektBudgetTabelle"
    tbl.TableStyle = "TableStyleMedium9"
    
    ' Aufräumen
    Application.CutCopyMode = False
    wsTarget.Cells(1, 1).Select
    
    MsgBox "Die Daten wurden erfolgreich extrahiert und formatiert.", vbInformation
End Sub

Function SheetExists(sheetName As String) As Boolean
    Dim ws As Worksheet
    On Error Resume Next
    Set ws = ThisWorkbook.Sheets(sheetName)
    SheetExists = Not ws Is Nothing
    On Error GoTo 0
End Function
